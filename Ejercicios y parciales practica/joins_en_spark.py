# -*- coding: utf-8 -*-
"""Joins-en-spark.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TSk6-imIVPJqt0M8YjYX7vwAwmGW6D0R

#instalacion de dependencias
"""

!pip install pyspark
!pip install -U -q PyDrive
!apt update
!apt install openjdk-8-jdk-headless -qq
#!apt install default-jre
#!apt install default-jdk
import os
os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"

"""# Creacion del Spark Context"""

from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark import SparkContext
from pyspark.sql import SQLContext

spark = SparkSession.builder.getOrCreate()
sc = spark.sparkContext

"""# Joins en Apache Spark

El siguiente notebook fue realizado para tener un punto de comparacion con lo visto anteriormente en analisis exploratorio con pandas. 

Para tener una comparativa, revisar el notebook [https://github.com/idontdomath/datos-exploratory-data-analysis/blob/master/2018-01/02-joins-in-pandas.ipynb](https://github.com/idontdomath/datos-exploratory-data-analysis/blob/master/2018-01/02-joins-in-pandas.ipynb)

Como referencia en la [Programming Guide de Apache Spark](https://spark.apache.org/docs/latest/programming-guide.html) podemos saber sobre join:

```
join(otherDataset, [numTasks])

When called on datasets of type (K, V) and (K, W), returns a dataset of (K, (V, W)) pairs with all pairs of elements for each key. Outer joins are supported through leftOuterJoin, rightOuterJoin, and fullOuterJoin.
```
"""

people_data = [
    (1,'People A'),
    (2,'People B'),
    (3,'People C'),
    (4,'People D'),
    (5,'People E'),
    (1,'People A')
]

a = sc.parallelize(people_data)

a.collect()

subject_data = [(1, 'Subject 1'),
                (1, 'Subject 1'),
               (2, 'Subject 2'),
               (200, 'Subject 1500'),
               (2, 'Subject 2 repetido')]

b = sc.parallelize(subject_data)

b.collect()

"""## Inner Join (Join)

Cuando se llama para sets de datos del tipo (K,V) y (K,W) devuelve un set de datos del tipo (K, (V,W)) con todos los pares de elementos para cada key. (especificamente los que hay en comun por esa clave en ambos sets de datos)
"""

a.join(b).collect()

"""## Left Outer Join

Cuando se llama para sets de datos del tipo (K,V) y (K,W) devuelve un set de datos del tipo (K, (V,W)) asegurandonos que todos los datos del set de datos izquierdo estaran en el resultado del join.
"""

a.leftOuterJoin(b).collect()

"""## Right Outer Join
Cuando se llama para sets de datos del tipo (K,V) y (K,W) devuelve un set de datos del tipo (K, (V,W)) asegurandonos que todos los datos del set de datos derecho estaran en el resultado del join.
"""

a.rightOuterJoin(b).collect()

"""## Outer/Full Join

Cuando se llama para sets de datos del tipo (K,V) y (K,W) devuelve un set de datos del tipo (K, (V,W)) asegurandonos que todos los datos de ambos set de datos estaran aunque no haya match de keys. 
"""

a.fullOuterJoin(b).collect()

